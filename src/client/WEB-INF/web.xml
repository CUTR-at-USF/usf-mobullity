<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:data-sources.xml classpath:/org/opentripplanner/api/security-application-context.xml</param-value>
	</context-param>
	
    <listener>
        <listener-class>org.opentripplanner.servlet.LoggingConfigurationListener</listener-class>
    </listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
  
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<filter>
		<filter-name>jsonpCallbackFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>jsonpCallbackFilter</filter-name>
		<url-pattern>/ws/*</url-pattern>
	</filter-mapping>
	
	<!-- Enables Spring Security -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>springSecurityFilterChain</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<servlet>
		<servlet-name>Jersey</servlet-name>
		<servlet-class>org.opentripplanner.servlet.ApiServlet</servlet-class>
		<!-- scan the semicolon-separated list packages for JAX-RS resource and parameter provider classes -->
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>org.opentripplanner</param-value>
		</init-param>
		<!-- to restore the old Badgerfish mapping, delete the following element -->
		<init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
  		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Jersey</servlet-name>
		<url-pattern>/ws/*</url-pattern>
	</servlet-mapping>
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
</web-app>
