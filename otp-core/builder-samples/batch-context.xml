<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <context:annotation-config />
    
    <bean class="org.opentripplanner.analyst.request.SampleFactory">
	    <property name="searchRadiusM" value="200" />
    </bean>
    <bean class="org.opentripplanner.routing.impl.DefaultRemainingWeightHeuristicFactoryImpl"/>
    <bean class="org.opentripplanner.routing.algorithm.GenericAStar"/>
    <bean class="org.opentripplanner.analyst.core.GeometryIndex" />
    
    <!-- specify a GraphService, configuring the path to the serialized Graphs -->
    
    <bean id="graphService" class="org.opentripplanner.routing.impl.GraphServiceImpl">
        <property name="path" value="C:\path\to\store\graph-bundle" />
        <property name="defaultRouterId" value="arbor" />
    </bean>

<!-- create a population directly from of a list of individuals -->
<!--     
	<bean id="origins" class="org.opentripplanner.analyst.batch.BasicPopulation">
        <property name="individuals">
            <list>
			    <bean class="org.opentripplanner.analyst.batch.Individual">
				    <property name="label" value="UMich" />
			        <property name="lon" value="-83.73820" />
			        <property name="lat" value="42.27490" />
			    </bean>
            </list>
        </property>
    </bean>
-->

 
<!-- load the origin population from a comma-separated flat text file -->

	<bean id="origins" class="org.opentripplanner.analyst.batch.CSVPopulation">
        <property name="sourceFilename" value="/home/abyrd/access/annarbor.csv" />
        <property name="labelCol" value="0" />
        <property name="latCol" value="1" />
        <property name="lonCol" value="2" />
        <property name="inputCol" value="3" />       
        <!-- do not include origins who are NaN, Inf, negative, or outside the transit coverage area --> 
        <property name="filterChain">
        	<list>
        		<bean class="org.opentripplanner.analyst.batch.NanInfFilter" />
        		<bean class="org.opentripplanner.analyst.batch.InputClampFilter" />
        		<bean class="org.opentripplanner.analyst.batch.GraphGeographicFilter">
			        <property name="useOnlyStops" value="true" />
			        <property name="bufferMeters" value="2000" />
        		</bean>
        	</list>
        </property>        
	</bean>


<!-- load the destination population from an ESRI Shapefile -->

	<bean id="destinations" class="org.opentripplanner.analyst.batch.ShapefilePopulation">
        <property name="sourceFilename" value="/home/abyrd/access/washtenaw_blocks/tl_2010_26161_tabblock10.shp" />
        <property name="labelAttribute" value="GEOID10" />
        <!-- do not specify an input data attribute here, we're only interested in the geometry
        <property name="inputAttribute" value="POPULATION" />
         -->
	</bean>


<!-- create a destination population arranged on a regular grid that can be saved as an image
	<bean id="destinations" class="org.opentripplanner.analyst.batch.SyntheticRasterPopulation">
        <property name="left" value="-84.14" />
        <property name="right" value="-83.41" />
        <property name="bottom" value="42.07" />
        <property name="top" value="42.45" />        
        <property name="crsCode" value="epsg:4326" />
        <property name="cols" value="1280" />
        <property name="rows" value="1024" />        
	</bean>
 -->
 
<!-- don't do this, populations currently cannot be reused -->
<!-- <alias name="destinations" alias="origins"/> -->
	

<!-- define the main batch processor, which will build one shortest path tree from each origin to all destinations -->
	
	<bean id="batchProcessor" class="org.opentripplanner.analyst.batch.BatchProcessor"> 
        <property name="outputPath" value="/home/abyrd/access/out.csv" />
        <property name="date" value="2012-07-12" />
        <property name="time" value="08:00 AM" />
        <property name="timeZone" value="America/New_York" />
		<!-- store aggregate results back to origins
        <property name="aggregator"> 
            <bean class="org.opentripplanner.analyst.batch.aggregator.ThresholdSumAggregator">
                <property name="threshold" value="3600" />
            </bean>
        </property> 
        -->
		<!-- accumulate origin input values into reachable destinations -->
        <property name="accumulator"> 
            <bean class="org.opentripplanner.analyst.batch.ThresholdAccumulator">
                <property name="threshold" value="3600" />
            </bean>
        </property> 
	</bean>

	<bean id="prototypeRoutingRequest" class="org.opentripplanner.routing.core.RoutingRequest">
		<!-- Set default routing parameters here -->
        <property name="routerId" value="arbor" />
        <property name="maxWalkDistance" value="2000" />
        <property name="clampInitialWait" value="1800" />
        <property name="arriveBy" value="false" />
        <property name="modes" value="WALK,TRANSIT" />
	</bean>

</beans>